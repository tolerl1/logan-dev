{"remainingRequest":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/thread-loader/dist/cjs.js!/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/babel-loader/lib/index.js!/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/buefy/src/components/navbar/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/buefy/src/components/navbar/Navbar.vue","mtime":499162500000},{"path":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/logan/LocalDoc/vue-projs/logan-dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}